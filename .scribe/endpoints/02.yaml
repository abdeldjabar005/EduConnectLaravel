name: Profile
description: |-

  APIs for managing profile
endpoints:
  -
    httpMethods:
      - PUT
    uri: 'api/user/{user_id}'
    metadata:
      groupName: Profile
      groupDescription: |-

        APIs for managing profile
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      profile_picture:
        name: profile_picture
        description: 'Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      bio:
        name: bio
        description: ''
        required: false
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      contact_information:
        name: contact_information
        description: ''
        required: false
        example: reprehenderit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      bio: et
      contact_information: reprehenderit
    fileParameters:
      profile_picture: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
