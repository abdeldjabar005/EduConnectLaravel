name: 'Authenticating requests'
description: |-

  APIs for managing registration
endpoints:
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: 'Authenticating requests'
      groupDescription: |-

        APIs for managing registration
      subgroup: ''
      subgroupDescription: ''
      title: 'Register a new user.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: 'The first name of the user.'
        required: true
        example: sunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      last_name:
        name: last_name
        description: 'The last name of the user.'
        required: true
        example: dolor
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'The email of the user.'
        required: true
        example: jovan.stanton@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      role:
        name: role
        description: 'The role of the user.'
        required: true
        example: in
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'The password of the user.'
        required: true
        example: 4D|pk859_
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      first_name: sunt
      last_name: dolor
      email: jovan.stanton@example.net
      role: in
      password: 4D|pk859_
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "id": 1,
           "first_name": "John",
           "last_name": "Doe",
           "email": "john.doe@example.com",
           "role": "admin",
           "token": "auth_token"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: 'Authenticating requests'
      groupDescription: |-

        APIs for managing login
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: streich.harley@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: y!TrVjz+^MC|
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: streich.harley@example.com
      password: y!TrVjz+^MC|
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
